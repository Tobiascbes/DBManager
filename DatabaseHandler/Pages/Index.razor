@page "/"
@using DatabaseHandler.Data
@using System
@using DatabaseHandler.Models
@inject DBConn dbConn
@inject DBConnModel dbConnModel
<h1 class="headline">Database</h1>
<p style="font-variant:italic; color: grey;">Disclaimer: Tables with no data won't be displayed</p>


<div class="dbstring">
    <form class="form">
        <label for="connName">Connection string</label> <br>
        <input type="text" id="connName" @bind="ConnectionString">
        <input type="button" value="Submit" @onclick="@OnClickMethod">
    </form>
</div>




<div class="tableLoop">
    @foreach (var group in Records.GroupBy(r => r.TableName))
    {
        <table class="table">
            <thead>
                <tr>
                    <details>
                        <summary>@group.Key</summary>
                        <table>
                            <thead>
                                <tr class="columnName">
                                    @foreach (var columnName in group.First().ColumnName)
                                    {
                                        <th class="testColumn">@columnName</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var record in group)
                                {
                                    <tr class="rowValue">
                                        @foreach (var value in record.RowValue)
                                        {
                                            <td class="testRow">@value.ToString()</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </details>
                </tr>
            </thead>
        </table>
    }
</div>

<div class="createSection">
    <h4>Add a New Database</h4>
    <label for="createName">Tabel name:</label>
    <input type="text" @bind="TabelName" />

    @foreach (var i in quickCreateItems)
    {

        <div class="quickCreate">

            <label for="variableName">Variable name:</label>
            <input type="text" @bind="@i.VariableName" />
            <label>Choose a datatype</label>
            <input type="text" list="dataType" @bind="@i.DataType" />
            <datalist id="dataType">
                <option>INT</option>
                <option>Tiny int</option>
                <option>Big int</option>
                <option>Float</option>
                <option>Char</option>
                <option>Nvarchar</option>
                <option>Varchar</option>

                <option>Date</option>
                <option>Time</option>
                <option>DateTime</option>
                <option>DateTimeNow</option>
                <option><input type="text" placeholder="Custom"></option>
            </datalist>
            <label>Value for datatype</label>
            <input type="text" @bind="@i.Value" / placeholder="Empty if no value is needed">
        </div>
    }
    <button class="btn btn-primary" @onclick="QuickCreate">Create</button>
    <button class="btn btn-primary" @onclick="Increment">New Line</button>
    <button class="btn btn-primary" @onclick="Decrease">remove line</button>


    <div class="queryBox">
        <label for="DatabaseQuery">Database Query</label> <br />
        <input type="text" style="resize:both; overflow:auto; width:500px; height:100px;" class="form-control" id="database" width="" @bind="Query"></input>
    </div>
    <button class="btn btn-primary" @onclick="CreateSqlCommand">Add Database</button>
</div>

@code {
    List<DBConnModel> dbLists = new();
    List<DBConnModel> Records = new();

    public string? ConnectionString { get; set; }
    public string? DatabaseTable { get; set; }
    public string? Query { get; set; }

    public string? TabelName { get; set; }


    List<QuickCreateItem> quickCreateItems = new List<QuickCreateItem> { new QuickCreateItem() };
    public class QuickCreateItem
    {
        public string? VariableName { get; set; }
        public string? DataType { get; set; }
        public string? Value { get; set; }
    }
    public void OnClickMethod()
    {
        dbConnModel.ConnectionString = ConnectionString;
        dbLists = dbConn.Read();
        ReadTable();
    }

    public void ReadTable()
    {
        Records = dbConn.GetAllRecords(dbLists);
    }
    public void CreateSqlCommand()
    {
        dbConn.SqlCommand(ConnectionString, Query, DatabaseTable);
        ReadTable();
    }
    public void QuickCreate()
    {
        List<string> localList = new List<string>();
        foreach (var item in quickCreateItems)
        {
            localList.Add($"{item.VariableName} {item.DataType} {item.Value}");
        }
        dbConn.Create(TabelName, localList);
        ReadTable();
    }

    int count = 1;
    void Increment()
    {
        quickCreateItems.Add(new QuickCreateItem());
        count++;
    }
    void Decrease()
    {
        if (count > 1)
        {
            quickCreateItems.RemoveAt(count - 1);
            count--;
        }
    }
}
